# To test, run python3 -m doctest -v tests/2-matrix_divided.txt


IMPORT THE MODULE:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


SUCCESS CASES:

Test for integers and floats(signed and unsigned):
=================================================
>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> print(matrix_divided(matrix, 2))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[4, -12, 28], [-3, 0, -17]]
>>> print(matrix_divided(matrix, 3))
[[1.33, -4.0, 9.33], [-1.0, 0.0, -5.67]]

>>> matrix = [[42.90, 56], [-10.46, -1783]]
>>> print(matrix_divided(matrix, 4))
[[10.72, 14.0], [-2.62, -445.75]]

>>> matrix = [[3]]
>>> print(matrix_divided(matrix, 3))
[[1.0]]


FAILED CASES:

Test for ZeroDivisionError:
==========================
>>> matrix = [[4]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[4, -45, 10.98], [3, 679, 0]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[14, 10.56], [-34, -15]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero



Test for TypeError:
===================
>>> matrix = [["Hi", 5], [4, 5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[8, [6.2, 5], 4], [4, 5.1, -16]]
>>> print(matrix_divided(matrix, 4))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[-56.56, 5], [(3, -4.6), 5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[None]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[], []]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = {5.6, -12, 17}
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> print(matrix_divided(matrix, "2"))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[4, -12, 28], [-3, 0, -17]]
>>> print(matrix_divided(matrix, [1, 3]))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[42.90, 56], [-10.46, -1783]]
>>> print(matrix_divided(matrix, (-2, -1)))
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix = [[1, 0, 5], [2]]
>>> print(matrix_divided(matrix, 8))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[21.3, 10, 6], [2, -19.5, 40], [-2, 67]]
>>> print(matrix_divided(matrix, 3.2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix = [[-6, -6], [3, 3]]
>>> print(matrix_divided(matrix, 2, 3))
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[2, 4], [-3, 1]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
